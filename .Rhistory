install.packages("blogdown")
blogdown::install_hugo()
blogdown::new_site(theme = 'gcushen/hugo-academic', theme_example = T)
library(tidyverse)
x <- 0:100 # km
y <- log(x)
df <- data.frame(x, y)
plot(x, y)
ggplot(df, aes(x = distance, y = depth)) +
geom_line() +
scale_x_reverse() +
coord_flip()
df <- data.frame(distance = x, depth = y)
ggplot(df, aes(x = distance, y = depth)) +
geom_line() +
scale_x_reverse() +
coord_flip()
ggplot(df, aes(x = distance, y = depth)) +
geom_line() +
scale_x_reverse() #+
ggplot(df, aes(x = distance, y = depth)) +
geom_line() +
scale_y_reverse() #+
x[1]
D(f, 'x')
f = expression(x^2 + 3*x) # No idea whether = is just the standard assignment operator here
D(f, 'x')
D(D(f, 'x'), 'x')
x <- 1:5
eval(f)
ff <-D(f, 'x')
print(ff)
eval(ff)
f <- function(x), x^2 + 3*x
f <- function(x) x^2 + 3*x
integrate(f, 0, 1)
head(df)
library(blogdown)
blogdown::serve_site()
build_site()
build_site()
install.packages
install.packages("gapminder")
build_site()
?new_content
new_content("lectures")
new_content("lecture_notes/", title = "Intro to R via the tidyverse", kind = "post/")
new_post("lecture_notes/", title = "Intro to R via the tidyverse", kind = "post/")
integrate(dnorm, -1, 1)
blogdown::new_post("Homework 2")
class(letters)
class(1:10)
class(c(1, 2, 3.5))
class(c(1, 2, "a"))
class(c(1, 0, 1))
c(TRUE, FALSE, 1)
class(c(TRUE, FALSE, 1))
class(c(TRUE, FALSE) + 0)
?raw
raw(17)
getwd()
?sum
df[3, ]
search()
datasets()
head(airquality)
?airquality
?"?"
?grep
?grepl
?lm
?summary.aov
?sum
grep(letters, "q")
grep("q", letters)
?sum
dplyr::group_by()
?dplyr::group_by()
?plot
?vignette
library(dplyr)
vignette("Introduction to dplyr", package = "dplyr")
vignette(all=FALSE)
vignette(dplyr)
vignette("dplyr")
vignette("vegan")
library(vegan)
install.packages("vegan")
vignette("vegan")
library(vegan)
vignette("vegan")
vignette(package="vegan")
2 + 2
a <- 2
b <- 2
c <- a + b
c
a <- 2
b <- 2
c <- a + b
trunk.diameters <- c(13, 4, 7, 19.2)
pi
trunk.circ <- 2 * pi * trunk.diameters
trunk.diameters
some.words <- c("foot", "effervescent", "paramount")
trunk.diameters + some.words
class(trunk.diameters)
class(some.words)
str(trunk.diameters)
str(some.words)
# Other classes of vectors
my.boolean <- c(TRUE, FALSE, TRUE) # Boolean
my.boolean
class(my.boolean)
my.int <- integer(c(1, 2, 3))
my.int <- as.integer(c(1, 2, 3))
class(my.int)
my.var <- my.int + trunk.diameters
my.var
class(my.var)
my.boolean + trunk.diameters
new.char <- c(1, 4, TRUE, "pants")
class(new.char)
new.char
c(1, "pants") + c(1, 2)
# Dreaded recycling
length(trunk.diameters)
length(my.int)
trunk.diameters + my.int
trunk.diameters + 5
.libPaths()
library(tidyverse)
search()
a
b
getwd()
getwd()
a <- 2
a <- 2
b <- 2
c <- sum(a, b)
c
sum(a, b)
library(tidyverse)
glimpse(diamonds)
head(diamonds)
ggplot(diamonds, aes(x=cut, y=price)) +
geom_boxplot() +
geom_point(position = position_dodge())
ggplot(diamonds, aes(x=cut, y=price)) +
geom_boxplot() +
geom_point(position = position_dodge(width = 0.3))
ggplot(diamonds, aes(x=cut, y=price)) +
geom_boxplot() +
geom_point(position = position_dodge2(width = 0.3))
ggplot(diamonds, aes(x=cut, y=price)) +
geom_boxplot() +
geom_point(position = position_dodge2())
ggplot(diamonds, aes(x=cut, y=price)) +
geom_boxplot() +
geom_point(position = position_jitter(width = 0.5, height = 0))
ggplot(diamonds, aes(x=cut, y=price)) +
geom_boxplot() +
geom_point(position = position_jitter(width = 0.3, height = 0))
ggplot(diamonds, aes(x=cut, y=price)) +
geom_boxplot() +
geom_point(position = position_jitter(width = 0.3, height = 0), alpha = 0.1)
ggplot(diamonds, aes(x=cut, y=price)) +
geom_boxplot(outliers = NULL) +
geom_point(position = position_jitter(width = 0.3, height = 0), alpha = 0.1)
?geom_boxplot
ggplot(diamonds, aes(x=cut, y=price)) +
geom_boxplot(outlier.shape = NULL) +
geom_point(position = position_jitter(width = 0.3, height = 0), alpha = 0.1)
ggplot(diamonds, aes(x=cut, y=price)) +
geom_boxplot(outlier.shape = NULL) +
geom_point(position = position_jitter(width = 0.3, height = 0), alpha = 0.01)
?geom_boxplot
ggplot(diamonds, aes(x=cut, y=price)) +
geom_boxplot(outlier.shape = NA) +
geom_point(position = position_jitter(width = 0.3, height = 0), alpha = 0.01)
ggplot(diamonds, aes(x=cut, y=price)) +
geom_violin()
?geom_violin
ggplot(diamonds, aes(x=cut, y=price)) +
geom_violin(draw_quantiles = c(0.25, 0.5, 0.75))
rm(list=ls())
library(nycflights13)
install.packages("nycflights13")
glimpse(flights)
library(nycflights13)
glimpse(flights)
vignette("flights")
vignette("nycflights13")
vignette("dplyr")
glimpse(flights)
?flights
filter(flights, month == 1)
filter(flights, month != 1)
?all_equal
summarise(flights %>% filter(month == 1), n.jan = sum(month==1))
summarise(flights %>% filter(month != 1), n.jan = sum(month==1))
flights %>% filter(month == 1) %>% summarise(n.jan = sum(month == 1)
)
# Other logical operators
filter(flights, month != 1)
# Other logical operators
filter(flights, month != 1)
filter(flights, month == 1 & year == 2013)
filter(flights == 1 | flights == 2)
filter(flights, month == 1 | month == 2)
# side note:
!TRUE
!FALSE
?filter
filter(flights, arr_delay <= 120, dep_delay <= 120)
filter(flights, arr_delay <= 120, dep_delay <= 120) %>% arrange(desc(arr_delay)) %>% select(dep_delay, arr_delay)
filter(flights, arr_delay >= 120, dep_delay >= 120) %>% arrange(desc(arr_delay)) %>% select(dep_delay, arr_delay)
filter(flights, arr_delay >= 120, dep_delay >= 120) %>% arrange(desc(arr_delay), dep_delay) %>% select(dep_delay, arr_delay)
filter(flights, arr_delay >= 120, dep_delay >= 120)  %>% select(dep_delay, arr_delay) %>% arrange(desc(arr_delay), dep_delay)
test <- filter(flights, arr_delay >= 120, dep_delay >= 120)  %>% select(dep_delay, arr_delay) %>% arrange(desc(arr_delay), dep_delay)
sum(test$dep_delay < 120)
sum(test$arr_delay < 120)
# dplyr allows a shortcut for &, but I don't recommend it
filter(flights, month == 1, year == 2014)
# dplyr allows a shortcut for &, but I don't recommend it
filter(flights, month == 1, year == 2014)
# dplyr allows a shortcut for &, but I don't recommend it
all_equal(filter(flights, arr_delay <= 120, dep_delay <= 120),
filter(flights, arr_delay <= 120 & dep_delay <= 120))
# dplyr allows a shortcut for &, but I don't recommend it
all_equal(filter(flights, arr_delay <= 120, dep_delay <= 120),
filter(flights, arr_delay <= 120 | dep_delay <= 120))
c(3, NA, 5) == c(3, NA, 7)
c(1, 2, 3, NA) == c(1, 3, NA, NA)
a == b
a <- c(1, 2, 3, NA)
b <- c(1, 3, NA, NA)
a == b
is.na(a)
a == b & !is.na(a) & ! is.na(b)
NA | TRUE
sum(a)
library(tidyverse)
library(nycflights13)
glimpse(flights)
grouped_df <- flights %>%
group_by(carrier) %>%
summarise(mean.dist = mean(distance))
head(grouped_df)
print(grouped_df, n=16)
grouped_df <- flights %>%
group_by(carrier, month) %>%
summarise(mean.dist = mean(distance))
head(grouped_df)
grouped_df <- flights %>%
group_by(carrier, month) %>%
summarise(mean.dist = mean(distance)) %>%
summarise(sd.by.month = sd(mean.dist))
head(grouped_df)
?summarise
summarise(flights, num.flights = n())
grouped_df <- group_by(flights, carrier)
carrier_summary <- summarise(grouped_df, num.flights = n())
carrier_summary
